#!/bin/bash

# First we need to establish whether we can run. We need chef-solo
# and git to get going.
# I am hardcoding Ubuntu paths here. Also, I am assuming a chef
# installation through rubygems. Rubygems itself will come from
# the Ubuntu Ruby package.

SOLO_SET=""
if [ "$#" -lt "1" ]; then
  SOLO_SET="personal"
else
  SOLO_SET="$1"
fi

BIN_SOLO="/usr/local/bin/chef-solo"
BIN_GIT="/usr/bin/git"

if [ "$SOLO_SET" == "init" ]; then
  echo "[+] Initializing ..."
  # Make sure that we have the essentials.
  if [ ! -x "$BIN_GIT" ]; then
    sudo apt-get install git
  fi
  if [ ! -x "$BIN_SOLO" ]; then
    sudo apt-get install ruby1.9.1 ruby1.9.1-dev build-essential
    sudo update-alternatives --set ruby /usr/bin/ruby1.9.1
    sudo update-alternatives --set gem /usr/bin/gem1.9.1
    sudo gem install chef rubyzip -V
  fi
  # Create the directory which will contain cloned repos etc
  mkdir -p $HOME/.csolo
  # Create directory from where we can run csolo in the future.
  # Also, copy csolo there. Make a backup if it already exists
  mkdir -p $HOME/local/bin
  if [ "$0" != "$HOME/local/bin/csolo" ]; then
    cp --backup=numbered "$0" $HOME/local/bin
  fi
  echo '    Make sure that HOME/local/bin is in your $PATH.'
  # Create scm directory
  mkdir -p $HOME/scm/{code,chef/cookbooks}
  # Create chef directories
  if [ ! -d $HOME/.chef/solo/cookbooks ]; then
    mkdir -p $HOME/.chef/solo/cookbooks
  fi
  if [ ! -d $HOME/.chef/solo/cache ]; then
    mkdir -p $HOME/.chef/solo/cache
  fi
  if [ -f solo.rb ]; then
    cp --backup=numbered solo.rb $HOME/.chef/
  fi
  if [ -f solo.json ]; then
    cp --backup=numbered solo.json $HOME/.chef/
  fi
  if [ -f solo.system.json ]; then
    cp --backup=numbered solo.system.json $HOME/.chef/
  fi
  echo "[+] Cloning froschi default cookbook."
  if [ ! -d $HOME/scm/chef/cookbooks/froschi ]; then
    git clone \
      https://github.com/froschi/chef-cookbook-froschi/ \
      $HOME/scm/chef/cookbooks/froschi
  fi
  if [ ! -e $HOME/.chef/solo/cookbooks/froschi ]; then
    ln -sf \
      $HOME/scm/chef/cookbooks/froschi \
      $HOME/.chef/solo/cookbooks/froschi
  fi
  exit 0
fi

if [ ! -x "$BIN_GIT" -o ! -x "$BIN_SOLO" ]; then
  echo "[-] Did not find some binaries. Please run csolo init."
  exit 1
fi

SOLO_LOG_LEVEL="info"
SOLO_CONFIG="$HOME/.chef/solo.rb"
SOLO_JSON_PERSONAL="$HOME/.chef/solo.json"
SOLO_JSON_SYSTEM="$HOME/.chef/solo.system.json"

if [ "$SOLO_SET" == "personal" ]; then
  $BIN_SOLO -l $SOLO_LOG_LEVEL -c $SOLO_CONFIG -j $SOLO_JSON_PERSONAL
elif [ "$SOLO_SET" == "system" ]; then
  sudo $BIN_SOLO -l $SOLO_LOG_LEVEL -c $SOLO_CONFIG -j $SOLO_JSON_SYSTEM
else
  echo "[-] Please provide an option: 'system' or 'personal'."
  exit 1
fi

# vim: tabstop=2 shiftwidth=2 expandtab
